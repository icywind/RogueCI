name: Build and Deploy 🚀

on: [push, pull_request, workflow_dispatch]

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  build:
    name: Build my project ✨
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0  # Add this line to fetch all history

      # Cache
      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          allowDirtyBuild: true  # Add this line to allow dirty builds

      # Output
      - uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: build/WebGL/*

# Deployment job
  deploy:
    name: Deploy to GitHub Pages 🚀
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

#  testRunner:
#    name: Test in ${{ matrix.testMode }} ✨
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        testMode:
#          - EditMode
#          - PlayMode
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Create LFS file list
#        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
#      - name: Restore LFS cache
#        uses: actions/cache@v2
#        id: lfs-cache
#        with:
#          path: .git/lfs
#          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
#      - name: Git LFS Pull
#        run: |
#          git lfs pull
#          git add .
#          git reset --hard
#
#      - name: Restore Library cache
#        uses: actions/cache@v2
#        with:
#          path: Library
#          key: Library-test-project-${{ matrix.targetPlatform }}
#          restore-keys: |
#            Library-test-project-
#            Library-
#
#      - name: Run tests
#        uses: game-ci/unity-test-runner@v2
#        id: testRunner
#        with:
#          testMode: ${{ matrix.testMode }}
#          checkName: ${{ matrix.testMode }} test results
#          githubToken: ${{ secrets.GITHUB_TOKEN }}
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: Test results (${{ matrix.testMode }})
#          path: ${{ steps.testRunner.outputs.artifactsPath }}
#
#  buildWebGL:
#    needs: testRunner
#    name: Build for WebGL 🖥️
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Create LFS file list
#        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
#      - name: Restore LFS cache
#        uses: actions/cache@v2
#        id: lfs-cache
#        with:
#          path: .git/lfs
#          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
#      - name: Git LFS Pull
#        run: |
#          git lfs pull
#          git add .
#          git reset --hard
#
#      - name: Restore Library cache
#        uses: actions/cache@v2
#        with:
#          path: Library
#          key: Library-build-WebGL
#          restore-keys: |
#            Library-build-
#            Library-
#
#      - uses: game-ci/unity-builder@v2
#        with:
#          targetPlatform: WebGL
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: build-WebGL
#          path: build/WebGL
#
#  buildWindows:
#    needs: testRunner
#    name: Build for Windows 🖥️
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Create LFS file list
#        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
#      - name: Restore LFS cache
#        uses: actions/cache@v2
#        id: lfs-cache
#        with:
#          path: .git/lfs
#          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
#      - name: Git LFS Pull
#        run: |
#          git lfs pull
#          git add .
#          git reset --hard
#
#      - name: Restore Library cache
#        uses: actions/cache@v2
#        with:
#          path: Library
#          key: Library-build-StandaloneWindows64
#          restore-keys: |
#            Library-build-
#            Library-
#
#      - uses: game-ci/unity-builder@v2
#        with:
#          targetPlatform: StandaloneWindows64
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: build-StandaloneWindows64
#          path: build/StandaloneWindows64
#
#  buildAndroid:
#    needs: testRunner
#    name: Build for Android 📱
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Create LFS file list
#        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
#      - name: Restore LFS cache
#        uses: actions/cache@v2
#        id: lfs-cache
#        with:
#          path: .git/lfs
#          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
#      - name: Git LFS Pull
#        run: |
#          git lfs pull
#          git add .
#          git reset --hard
#
#      - name: Restore Library cache
#        uses: actions/cache@v2
#        with:
#          path: Library
#          key: Library-build-Android
#          restore-keys: |
#            Library-build-
#            Library-
#
#      - uses: game-ci/unity-builder@v2
#        with:
#          targetPlatform: Android
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: build-Android
#          path: build/Android
#
#
#  deployPages:
#    needs: buildWebGL
#    name: Deploy to Github Pages 🚀
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - uses: actions/download-artifact@v2
#        with:
#          name: build-WebGL
#          path: build
#
#      - name: Deploy 🚀
#        uses: JamesIves/github-pages-deploy-action@4.1.4
#        with:
#          branch: gh-pages
#          folder: build/WebGL
#
