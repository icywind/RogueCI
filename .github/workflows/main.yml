name: Build and Deploy ðŸš€

on: [push, pull_request, workflow_dispatch]

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}


jobs:
  build:
    name: Build and Deploy Unity WebGL
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      # Cache Unity build artifacts
      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: Library-

      # Run Unity tests (optional)
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build WebGL
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          allowDirtyBuild: true  # Add this line to allow dirty builds
          buildName: .   # <--- THIS avoids nesting

      # Debug build output
      - name: Show build output
        run: |
          tree build || ls -R build
          
      # Prepare WebGL output folder for Pages
      - name: Prepare WebGL artifact
        run: |
          mkdir webgl-deploy
          rsync -av --progress build/WebGL/ webgl-deploy/

      # Add .nojekyll to prevent GitHub Pages from ignoring folders like `/Build`
      - name: Disable Jekyll
        run: touch webgl-deploy/.nojekyll

      # Debug copy output
      - name: Show deployed folder structure
        run: |
          tree webgl-deploy || ls -R webgl-deploy

      # Upload to GitHub Pages artifact store
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: webgl-deploy

  deploy:
    name: Deploy to GitHub Pages ðŸš€
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4